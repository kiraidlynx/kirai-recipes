install.packages("dummies")
install.packages("dummies")
install.packages("Hmisc")
install.packages("mice")
install.packages("VIM")
install.packages("tidyr")
?gather
??gather
?tidyr
??tidyr
library(tidyr)
?gather
install.packages("Hmisc")
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages(c("cli", "desc", "gargle", "gh", "gitcreds", "httpuv", "lifecycle", "MatrixModels", "xfun", "zip"))
install.packages("cli")
library(mice)
housing.data <- read.csv("../data/tema1/housing-with-missing-value.csv",
header = TRUE,
stringsAsFactors = FALSE)
housing.data <- read.csv("GitHub/r-course/data/tema1/housing-with-missing-value.csv,
header = TRUE,
stringsAsFactors = FALSE)
columns <- c("ptratio", "rad")
housing.data <- read.csv("GitHub/r-course/data/tema1/housing-with-missing-value.csv",
header = TRUE,
stringsAsFactors = FALSE)
impute_arg <- aregImpute(~ptratio + rad, data = housing.data, n.impute = 5)
library(Hmisc)
impute_arg <- aregImpute(~ptratio + rad, data = housing.data, n.impute = 5)
impute_arg
install.packages("caret")
install.packages("ROCR")
install.packages(C("rpart", "rpart.plot"))
install.packages("rpart")
install.packages("rpart.plot")
install.packages("randomForest")
install.packages("e1071")
install.packages("naivebayes")
library(naivebayes)
detach("package:naivebayes", unload = TRUE)
remove.packages("naivebayes")
install.packages("e1071")
install.packages("nnet")
install.packages(c("gert", "gitlabr", "openssl", "raster", "zoo"))
install.packages("cli")
install.packages("dummies")
install.packages("MASS")
setwd("GitHub/DS-usefull-functions/10 - twitter/")
install.packages("twitteR")
install.packages("RColorBrewer")
install.packages("devtools")
install.packages("httr")
install_url("https://cran.r-project.org/source/contrib/Archive/Rstem/Rstem_0.4-1.tar.gz")
install.packages("https://cran.r-project.org/source/contrib/Archive/Rstem/Rstem_0.4-1.tar.gz")
install.packages("https://cran.r-project.org/source/contrib/Archive/slam/slam_0.1-37.tar.gz")
install.packages("https://cran.r-project.org/source/contrib/Archive/sentiment/sentiment_0.2.tar.gz")
install.packages("slam")
install.packages('Rstem', repos = "http://www.omegahat.net/R")
install.packages("Rstem", repos = "http://www.omegahat.net/R")
install.packages("Rstem", repos = "http://www.omegahat.net/R", type="source")
install.packages("SentimentAnalysis")
#Paquetes no disponibles
install.packages("https://cran.r-project.org/source/contrib/Archive/Rstem/Rstem_0.4-1.tar.gz")
install.packages("Rstem", repos = "http://www.omegahat.net/R", type="source")
install.packages("SnowballC")
#ACTIVACIÓN DE LIBRERIAS
library(twitteR)
library(slam)
library(SentimentAnalysis)
##REQUISITOS
require(devtools)
#Se define las variables para el acceso al API de twitter
api_key <- "CpBCPxgNziJeEN5Qkbe5bhRh5"
api_secret <- "ZhNjtYHZsiBjtZxuvG49FJ9kJfuXofKGsUUSGw4KB7pWiUkf6n"
access_token <- "225356968-c3yKsrBsQ6V5sAg2vuqfT505mSqLkWZUNROY5pkN"
access_token_secret <- "UZRAHZsJ93paLJhP8kdg3W4lWKM8a0noTgY6kVq66Z98v"
setup_twitter_oauth(api_key,api_secret,access_token, access_token_secret)
detach("package:twitteR", unload = TRUE)
detach("package:slam", unload = TRUE)
?SentimentAnalysis
?SnowballC
??SnowballC
library(twitteR)
library(slam)
library(SentimentAnalysis)
tweets<-searchTwitter("laliga", n=1500, lang="es")
setup_twitter_oauth(api_key,api_secret,access_token, access_token_secret)
tweets<-searchTwitter("laliga", n=1500, lang="es")
View(tweets)
#LIMPIAR TWEETS
text<-sapply(tweets, function(x) x$getText())
head(text)
View(tweets)
#LIMPIAR TWEETS
text<-sapply(tweets, function(x) x$getText())
head(text)
clean.data<-function(text){
#eliminar re-tweets y @ del texto original - EXPRESSION REGULAR
text=gsub("(RT|VIA)((?:\\b\\W*@\\w+)+)","", text)
text=gsub("@\\w+", "", text)
#eliminar signos de puntuación y dígitos
text=gsub("[[:punct:]]", "", text)
text=gsub("[[:digits:]]", "", text)
#eliminar links html, tab y espacios adicionales
text=gsub("http\\w+", "", text)
text=gsub("[ \t]{2,} ", "", text)
text=gsub("^\\s+|\\s+$", "", text)
}
clean.data<-function(text){
#eliminar re-tweets y @ del texto original - EXPRESSION REGULAR
text=gsub("(RT|VIA)((?:\\b\\W*@\\w+)+)","", text)
text=gsub("@\\w+", "", text)
#eliminar signos de puntuación y dígitos
text=gsub("[[:punct:]]", "", text)
text=gsub("[[:digit:]]", "", text)
#eliminar links html, tab y espacios adicionales
text=gsub("http\\w+", "", text)
text=gsub("[ \t]{2,} ", "", text)
text=gsub("^\\s+|\\s+$", "", text)
}
#LIMPIAR TWEETS
texts<-sapply(tweets, function(x) x$getText())
clear(text)
clean.data(text)
texts<-clean.data(texts)
head(texts)
handle.error<-function(x){
#crear el valor omitido
y=NA
#try_catch error
try_error<-tryCatch(tolower(x), error=function(e) e)
#si no hay error
if(!inherits(try_error, "error"))
y=tolower(x)
#devolvemos resultado
return(y)
}
texts<-sapply(texts, handle.error)
head(texts)
texts=sapply(texts, handle.error)
head(texts)
texts
texts<-texts[!is.na(texts)]
texts=sapply(texts, handle.error)
texts<-texts[!is.na(texts)]
names(texts)<-NULL
head(texts)
install.packages("C:/Users/crist/Desktop/sentiment_0.2.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/crist/Desktop/Rstem_0.4-1.tar.gz", repos = NULL, type = "source")
require(devtools)
install.packages("C:/Users/crist/Desktop/Rstem_0.4-1.tar.gz", repos = NULL, type = "source")
Sys.getenv()
Sys.getenv("PATH")
